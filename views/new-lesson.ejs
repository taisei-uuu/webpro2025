<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>新規レッスン作成 | 株式投資学習ロードマップ</title>
    <link rel="icon" type="image/png" href="/logo.png">
    <link rel="stylesheet" href="/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <style>
        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            box-sizing: border-box;
        }

        .site-header {
            padding: 10px 0;
            min-height: auto;
            background-color: white;
            border-bottom: 1px solid #f0f0f0;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: nowrap; 
            padding: 0 15px;
        }

        .header-logo {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: #000000;
            font-family: 'Inter', 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
            font-weight: 600;
            font-size: 1.5rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            line-height: 1;
        }

        .header-logo img {
            height: 40px;
            margin-right: 8px;
        }

        .header-logo .brand-with {
            font-weight: 400;
            color: #1e40af;
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        #login-btn {
            border: none;
            background: none;
            padding: 8px 16px;
            font-size: 1rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            color: #000000;
            text-decoration: none;
        }

        #login-btn:hover {
            color: #1e40af;
        }

        .user-greeting {
            margin-right: 10px;
            font-size: 0.9rem;
            color: #666;
        }

        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            .header-logo {
                font-size: 1.2rem;
            }
            .header-logo img {
                height: 35px;
            }
            #login-btn {
                padding: 6px 12px;
                font-size: 0.9rem;
            }
        }

        @media (max-width: 480px) {
            .header-content {
                padding: 0 10px;
            }
            .header-logo {
                font-size: 1.1rem;
            }
            .header-logo img {
                height: 30px;
            }
            #login-btn {
                padding: 6px 8px;
                font-size: 0.8rem;
            }
        }
    </style>
</head>
<body>

    <header class="site-header">
        <div class="container">
            <div class="header-content">
                <!-- 左側のロゴと商号 -->
                <a href="/learning" class="header-logo">
                    <img src="/logo.png" alt="Stock with" height="40">
                    STOCK&nbsp;<span class="brand-with">WITH</span>
                </a>
                
                <!-- 右側のアクションボタン -->
                <div class="header-actions">
                    <% if (user) { %>
                        <!-- ログイン済みの場合 -->
                        <button id="login-btn" class="btn btn-outline" onclick="handleUserProfile()">
                            <i class="fas fa-user"></i>
                        </button>
                    <% } else { %>
                        <!-- 未ログインの場合 -->
                        <button id="login-btn" class="btn btn-outline" onclick="window.Clerk.openSignIn()">
                            <i class="fas fa-right-to-bracket"></i>
                            ログイン
                        </button>
                    <% } %>
                </div>
            </div>
        </div>
    </header>

    <main class="site-main">
        <div class="container">
            <form action="/admin/lessons" method="POST" class="lesson-form">
                <div class="form-group">
                    <label for="chapter">章番号</label>
                    <input type="number" id="chapter" name="chapter" required min="1" placeholder="例: 1">
                </div>
                <div class="form-group">
                    <label for="title">レッスンタイトル</label>
                    <input type="text" id="title" name="title" required placeholder="例: 1-4. 新しい知識">
                </div>
                <div class="form-group">
                    <label for="content">内容</label>
                    <textarea id="content" name="content" rows="5" required placeholder="レッスンの詳細な内容を記述します。"></textarea>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn">作成する</button>
                    <a href="/" class="back-link">キャンセル</a>
                </div>
            </form>
        </div>
    </main>

    <footer class="site-footer">
        <div class="container">
            <p>&copy; 2025 株式投資ロードマップ. All Rights Reserved.</p>
        </div>
    </footer>

    <%- include('_chatbot') %>
    <script src="/chatbot.js"></script>
    
    <script>
        // Clerkの初期化（簡素化版）
        window.addEventListener('load', async () => {
            try {
                console.log('Clerk初期化を開始します...');
                console.log('Publishable key:', window.Clerk.publishableKey);
                
                // Clerkが利用可能かチェック
                if (window.Clerk && typeof window.Clerk.load === 'function') {
                    await window.Clerk.load();
                    console.log('Clerk loaded successfully');
                } else {
                    console.log('Clerkは既に初期化済みまたは利用できません');
                }
                
                console.log('Clerk object:', window.Clerk);
                console.log('Current user:', window.Clerk.user);
                
                updateAuthUI();
                
            } catch (error) {
                console.error('Error loading Clerk:', error);
                // エラーが発生してもページは継続
                console.log('Clerkの初期化に失敗しましたが、ページは継続します');
            }
        });
        
        // ユーザープロフィール処理関数
        function handleUserProfile() {
            console.log('ユーザープロフィールボタンがクリックされました');
            
            // サーバーサイドでユーザーがログインしているかチェック
            <% if (user) { %>
                console.log('サーバーサイドでユーザーがログイン済みです');
                // Clerkが利用可能かチェック
                if (window.Clerk && typeof window.Clerk.openUserProfile === 'function') {
                    try {
                        window.Clerk.openUserProfile();
                        console.log('プロフィール画面を開きました');
                    } catch (error) {
                        console.error('プロフィール画面を開く際にエラーが発生しました:', error);
                        alert('プロフィール画面を開けませんでした。');
                    }
                } else {
                    console.error('Clerkが利用できません');
                    alert('プロフィール機能が利用できません。');
                }
            <% } else { %>
                console.log('ユーザーがログインしていません');
                alert('ログインが必要です。');
            <% } %>
        }

        // 認証UIの更新関数（サーバーサイドで既に適切な状態が設定されているため、簡素化）
        function updateAuthUI() {
            const user = window.Clerk.user;
            const loginBtn = document.getElementById('login-btn');
            
            if (user) {
                // ログイン済みの場合
                if (loginBtn) {
                    loginBtn.innerHTML = '<i class="fas fa-user"></i>';
                    loginBtn.onclick = handleUserProfile;
                }
            } else {
                // 未ログインの場合
                if (loginBtn) {
                    loginBtn.innerHTML = '<i class="fas fa-right-to-bracket"></i> ログイン';
                    loginBtn.onclick = () => window.Clerk.openSignIn();
                }
            }
        }
    </script>
</body>
</html>