<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= lesson.title %> | 株式投資学習ロードマップ</title>
    <link rel="icon" type="image/png" href="/logo.png">
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="/retro-cards.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <!-- Clerk認証スクリプト -->
    <script>
        window.Clerk = window.Clerk || {};
        window.Clerk.publishableKey = '<%= publishableKey || "" %>';
    </script>
    <% if (publishableKey) { %>
    <script async crossorigin="anonymous" data-clerk-publishable-key="<%= publishableKey %>" src="https://<%= publishableKey.split('_')[1] %>.clerk.accounts.dev/npm/@clerk/clerk-js@latest/dist/clerk.browser.js"></script>
    <% } %>
    
    <style>
        /* General body style for demonstration */
        body {
            margin: 0;
            font-family: sans-serif;
        }

        .container {
            width: 100%;
            max-width: 1200px; /* Or your desired max width */
            margin: 0 auto;
            box-sizing: border-box; /* Ensures padding doesn't add to width */
        }

        /* --- ここからがヘッダーのスタイルです --- */

        .site-header {
            padding: 10px 0;
            min-height: auto;
            background-color: white; /* 白い背景を追加 */
            border-bottom: 1px solid #f0f0f0; /* Optional: adds a nice separator */
        }

        .header-content {
            display: flex;
            justify-content: space-between; /* 左右に配置 */
            align-items: center;
            flex-wrap: nowrap; 
            padding: 0 15px;
            position: relative; /* 相対位置指定で左右の要素を絶対配置 */
        }

        /* 左側のロゴと商号 */
        .header-logo {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: #000000;
            font-family: 'Inter', 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
            font-weight: 600;
            font-size: 1.5rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            line-height: 1;
        }

        .header-logo img {
            height: 40px;
            margin-right: 8px;
        }

        .header-logo .brand-with {
            font-weight: 400;
            color: #1e40af;
        }
        
        /* 右側のアクションボタンのコンテナ */
        .header-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        #login-btn {
            border: none;
            background: none;
            padding: 8px 16px;
            font-size: 1rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            color: #000000;
            text-decoration: none;
        }

        #login-btn:hover {
            color: #1e40af;
        }
        
        .user-greeting {
            margin-right: 10px;
            font-size: 0.9rem;
            color: #666;
        }

        /* --- レスポンシブ対応 --- */
        
        /* 768px以下の画面サイズ */
        @media (max-width: 768px) {
            .header-logo {
                font-size: 1.2rem;
            }
            .header-logo img {
                height: 35px;
            }
            #login-btn {
                padding: 6px 12px;
                font-size: 0.9rem;
            }
        }

        /* 480px以下の画面サイズ */
        @media (max-width: 480px) {
            .header-content {
                padding: 0 10px; /* さらに狭い画面ではパディングを少し減らす */
            }
            .header-logo {
                font-size: 1.1rem;
            }
            .header-logo img {
                height: 30px;
            }
            #login-btn {
                padding: 6px 8px;
                font-size: 0.8rem;
            }
        }


        /* ナビゲーションボタンのスタイル */
        .lesson-navigation {
            margin: 30px 0;
        }

        .navigation-buttons {
            display: flex;
            justify-content: space-between; /* 両端に配置 */
            align-items: center;
            padding: 0 20px; /* 左右のパディングで余白を確保 */
        }

        .back-link, .next-link {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            color: #495057;
            text-decoration: none;
            font-size: 1.2rem;
            transition: all 0.3s ease;
            flex-shrink: 0; /* ボタンが縮まないようにする */
            margin: 0; /* マージンをリセット */
            padding: 0; /* パディングをリセット */
        }

        /* 次へ進むボタンを青色に */
        .next-link {
            background-color: #007bff;
            border-color: #007bff;
            color: white;
        }

        .back-link:hover {
            background-color: #e9ecef;
            border-color: #adb5bd;
            color: #212529;
            transform: translateY(-2px);
        }

        .next-link:hover {
            background-color: #0056b3;
            border-color: #0056b3;
            color: white;
            transform: translateY(-2px);
        }

        /* モバイル対応 */
        @media (max-width: 768px) {
            .lesson-navigation {
                margin: 20px 0;
            }
            
            .navigation-buttons {
                padding: 0 15px; /* モバイルでは少し狭く */
            }
            
            .back-link, .next-link {
                width: 45px;
                height: 45px;
                font-size: 1.1rem;
            }
        }

        @media (max-width: 480px) {
            .lesson-navigation {
                margin: 15px 0;
            }
            
            .navigation-buttons {
                padding: 0 10px; /* スマートフォンではさらに狭く */
            }
            
            .back-link, .next-link {
                width: 40px;
                height: 40px;
                font-size: 1rem;
            }
        }

        /* レッスンタイトルのスタイル調整 */
        .lesson-title {
            font-size: 2rem;
            line-height: 1.2;
            margin-bottom: 1.5rem;
        }

        /* スマホ版でのレッスンタイトル調整 */
        @media (max-width: 768px) {
            .lesson-title {
                font-size: 1.5rem;
                line-height: 1.3;
                margin-bottom: 1rem;
                padding: 0 10px;
            }
        }

        @media (max-width: 480px) {
            .lesson-title {
                font-size: 1.3rem;
                line-height: 1.4;
                margin-bottom: 0.8rem;
                padding: 0 5px;
            }
        }

        /* はじめに 専用スタイル - シンプルなデザイン */
        .stage0-lesson-content {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 2.5rem;
            margin: 2rem 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            color: #333;
        }

        .stage0-lesson-content .intro-greeting {
            font-size: 1.1rem;
            color: #333;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .stage0-lesson-content .highlight-text {
            color: #007bff;
            font-weight: 800;
            font-size: 1.6rem;
        }

        .stage0-lesson-content .intro-description {
            font-size: 1.1rem;
            line-height: 1.8;
            color: #333;
            margin-bottom: 1.2rem;
            text-align: center;
        }

        .stage0-lesson-content .next-stage-button {
            display: inline-block;
            vertical-align: middle;
            /* margin-top: 2rem; */
            padding: 1rem 2rem;
            background: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 600;
            text-align: center;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
        }

        .stage0-lesson-content .next-stage-button:hover {
            background: #0056b3;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(0, 123, 255, 0.4);
            color: white;
            text-decoration: none;
        }

        .stage0-lesson-content .next-stage-button i {
            margin-left: 0.5rem;
            vertical-align: middle;
        }

        @media (max-width: 768px) {
            .stage0-lesson-content {
                padding: 2rem;
                margin: 1.5rem 0;
            }
            
            .stage0-lesson-content .intro-greeting {
                font-size: 1.2rem;
            }
            
            .stage0-lesson-content .highlight-text {
                font-size: 1.4rem;
            }
            
            .stage0-lesson-content .intro-description {
                font-size: 1.1rem;
            }
            
            .stage0-lesson-content .next-stage-button {
                padding: 0.8rem 1.5rem;
                font-size: 1rem;
            }
        }

        @media (max-width: 480px) {
            .stage0-lesson-content {
                padding: 1.5rem;
                margin: 1rem 0;
            }
            
            .stage0-lesson-content .intro-greeting {
                font-size: 1.1rem;
            }
            
            .stage0-lesson-content .highlight-text {
                font-size: 1.3rem;
            }
            
            .stage0-lesson-content .intro-description {
                font-size: 1rem;
            }
            
            .stage0-lesson-content .next-stage-button {
                padding: 0.7rem 1.2rem;
                font-size: 0.9rem;
                width: 100%;
                text-align: center;
            }
        }

    </style>
</head>
<body>

    <header class="site-header">
        <div class="container">
            <!-- 修正後のHTML構造 -->
            <div class="header-content">
                <!-- 左側のロゴと商号 -->
                <a href="/learning" class="header-logo">
                    <img src="/logo.png" alt="Stock with" height="40">
                    STOCK&nbsp;<span class="brand-with">WITH</span>
                </a>
                
                <!-- 右側のアクションボタン -->
                <div class="header-actions">
                    <% if (user) { %>
                        <!-- ログイン済みの場合 -->
                        <button id="login-btn" class="btn btn-outline" onclick="handleUserProfile()">
                            <i class="fas fa-user"></i>
                        </button>
                    <% } else { %>
                        <!-- 未ログインの場合 -->
                        <button id="login-btn" class="btn btn-outline" onclick="window.Clerk.openSignIn()">
                            <i class="fas fa-right-to-bracket"></i>
                            ログイン
                        </button>
                    <% } %>
                </div>
            </div>
        </div>
    </header>

    <main class="site-main">
        <div class="container">
            <% if (isGuest) { %>
            <!-- ゲストモード通知 -->
            <div class="guest-notice">
                <i class="fas fa-info-circle"></i>
                <div>
                    <strong>ゲストモードで学習中</strong><br>
                    学習進捗は保存されません。進捗を保存するには<a href="#" onclick="window.Clerk.openSignIn()">ログイン</a>または<a href="#" onclick="window.Clerk.openSignUp()">新規登録</a>してください。
                </div>
            </div>
            <% } %>

            
            <article class="lesson-content">
                <h2 class="lesson-title" id="lesson-title"><%= lesson.title %></h2>
                
                <!-- 動画セクション（動画IDが設定されているレッスンの場合に表示） -->
                <!-- デバッグ情報: レッスンID = <%= lesson.id %>, タイトル = <%= lesson.title %>, 動画ID = <%= lesson.videoId %> -->
                <% if (lesson.videoId) { %>
                <div class="video-section">
                    <h3><i class="fas fa-play-circle me-2"></i>動画で学ぶ</h3>
                    <div class="responsive-video-container">
                        <iframe 
                            src="https://player.vimeo.com/video/<%= lesson.videoId %>?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479&amp;title=0&amp;byline=0&amp;portrait=0" 
                            frameborder="0" 
                            allow="autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media; web-share" 
                            referrerpolicy="strict-origin-when-cross-origin" 
                            title="<%= lesson.videoTitle || lesson.title %>">
                        </iframe>
                    </div>
                    <p class="video-description">
                        <i class="fas fa-info-circle me-1"></i>
                        動画で<%= lesson.title %>について視覚的に学習しましょう。音声付きでより理解が深まります。
                    </p>
                </div>
                <% } %>
                
                <% if (lesson.id !== 'stage0-intro' && lesson.id !== 'ending-intro') { %>
                <div class="lesson-body">
                    <!-- <%- lesson.content %> -->
                </div>
                <% } else { %>
                <div class="lesson-body">
                    <%- lesson.content %>
                </div>
                <% } %>
                
                <!-- Retro Cards Component -->
                <% if (lesson.id !== 'stage0-intro' && lesson.id !== 'ending-intro') { %>
                <div id="retro-cards-container"></div>
                <% } %>

                <% if (lesson.questions && lesson.questions.length > 0 && locals.quizResult) { %>
                    <section class="quiz-section">
                        <h3>理解度チェックテスト</h3>
                        <% lesson.questions.forEach(question => { %>
                            <div class="question">
                                <p class="question-text"><%= question.text %></p>

                                <% if (clearedQuestionIds.has(question.id) && quizResult.questionId !== question.id) { %>
                                    <div class="quiz-feedback cleared">
                                        <p><strong>クリア済み！</strong></p>
                                    </div>
                                <% } else if (quizResult && quizResult.questionId === question.id) { %>
                                    <div class="quiz-feedback <%= quizResult.result %>">
                                        <% if (quizResult.result === 'correct') { %>
                                            <p><strong>正解！</strong></p>
                                        <% } else { %>
                                            <p><strong>不正解...</strong> もう一度挑戦してみましょう！</p>
                                        <% } %>
                                    </div>
                                <% } %>

                                <form action="/lessons/<%= lesson.slug %>/quiz/submit" method="POST" class="options-list" id="quiz-form-<%= question.id %>">
                                    <input type="hidden" name="questionId" value="<%= question.id %>">
                                    <% question.options.forEach(option => { %>
                                        <%
                                           let btnClass = 'option-btn';
                                           const isAnswered = quizResult && quizResult.questionId === question.id;
                                           const isCleared = clearedQuestionIds.has(question.id);
                                           if (isAnswered || isCleared) {
                                               if (option.id === quizResult.correctId) btnClass += ' correct';
                                               else if (option.id === quizResult.selectedId) btnClass += ' incorrect';
                                           }
                                        %>
                                        <button type="submit" name="selectedOptionId" value="<%= option.id %>" class="<%= btnClass %>" <%- (isAnswered || isCleared) ? 'disabled' : '' %>>
                                            <%= option.text %>
                                        </button>
                                    <% }); %>
                                </form>
                            </div>
                        <% }); %>
                    </section>
                <% } %>

                <div class="lesson-navigation">
                    <div class="navigation-buttons">
                        <a href="/learning" class="back-link" title="ロードマップに戻る"><i class="fa-solid fa-house"></i></a>
                        <% if (nextLesson) { %>
                            <a href="/lessons/<%= nextLesson.slug %>" class="next-link" title="次のセクションへ進む"><i class="fa-solid fa-forward"></i></a>
                        <% } %>
                    </div>
                </div>
            </article>
        </div>
    </main>

    <footer class="site-footer">
        <div class="container">
            <p>&copy; 2025 株式投資ロードマップ. All Rights Reserved.</p>
        </div>
    </footer>

    <!-- チャットボット機能（一時的にコメントアウト） -->
    <!-- <%- include('_chatbot') %> -->
    <!-- <script src="/chatbot.js"></script> -->
    
    <script>
        // レッスンタイトルの表示形式を変更
        function formatLessonTitle() {
            const titleElement = document.getElementById('lesson-title');
            if (!titleElement) return;
            
            const originalTitle = titleElement.textContent.trim();
            
            // "Stage1-2.口座開設手順を確認しよう" -> "1-2. 口座開設手順を確認しよう"
            const formattedTitle = originalTitle.replace(/^Stage(\d+-\d+)\./, '$1. ');
            titleElement.textContent = formattedTitle;
        }

        // Clerkの初期化（簡素化版）
        window.addEventListener('load', async () => {
            try {
                console.log('Clerk初期化を開始します...');
                console.log('Publishable key:', window.Clerk.publishableKey);
                
                // Clerkが利用可能かチェック
                if (window.Clerk && typeof window.Clerk.load === 'function') {
                    await window.Clerk.load();
                    console.log('Clerk loaded successfully');
                } else {
                    console.log('Clerkは既に初期化済みまたは利用できません');
                }
                
                console.log('Clerk object:', window.Clerk);
                console.log('Current user:', window.Clerk.user);
                
                updateAuthUI();
                
                // レッスンタイトルの表示形式を変更
                formatLessonTitle();
                
            } catch (error) {
                console.error('Error loading Clerk:', error);
                // エラーが発生してもページは継続
                console.log('Clerkの初期化に失敗しましたが、ページは継続します');
            }
        });
        
        // ユーザープロフィール処理関数
        function handleUserProfile() {
            console.log('ユーザープロフィールボタンがクリックされました');
            
            // サーバーサイドでユーザーがログインしているかチェック
            <% if (user) { %>
                console.log('サーバーサイドでユーザーがログイン済みです');
                // Clerkが利用可能かチェック
                if (window.Clerk && typeof window.Clerk.openUserProfile === 'function') {
                    try {
                        window.Clerk.openUserProfile();
                        console.log('プロフィール画面を開きました');
                    } catch (error) {
                        console.error('プロフィール画面を開く際にエラーが発生しました:', error);
                        alert('プロフィール画面を開けませんでした。');
                    }
                } else {
                    console.error('Clerkが利用できません');
                    alert('プロフィール機能が利用できません。');
                }
            <% } else { %>
                console.log('ユーザーがログインしていません');
                alert('ログインが必要です。');
            <% } %>
        }

        // 認証UIの更新関数（サーバーサイドで既に適切な状態が設定されているため、簡素化）
        function updateAuthUI() {
            const user = window.Clerk.user;
            const loginBtn = document.getElementById('login-btn');
            
            if (user) {
                // ログイン済みの場合
                if (loginBtn) {
                    loginBtn.innerHTML = '<i class="fas fa-user"></i>';
                    loginBtn.onclick = handleUserProfile;
                }
            } else {
                // 未ログインの場合
                if (loginBtn) {
                    loginBtn.innerHTML = '<i class="fas fa-right-to-bracket"></i> ログイン';
                    loginBtn.onclick = () => window.Clerk.openSignIn();
                }
            }
        }
    </script>
    
    <!-- Retro Cards Component -->
    <script src="/retro-cards.js"></script>
</body>
</html>
