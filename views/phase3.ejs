<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Phase 3 - 実践編 | 株式投資学習ロードマップ</title>
    <link rel="icon" type="image/png" href="/logo.png">
    <link rel="stylesheet" href="/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <!-- Clerk認証スクリプト -->
    <script>
        window.Clerk = window.Clerk || {};
        window.Clerk.publishableKey = '<%= publishableKey || "" %>';
    </script>
    <% if (publishableKey) { %>
    <script async crossorigin="anonymous" data-clerk-publishable-key="<%= publishableKey %>" src="https://<%= publishableKey.split('_')[1] %>.clerk.accounts.dev/npm/@clerk/clerk-js@latest/dist/clerk.browser.js"></script>
    <% } %>
</head>
<body>

    <style>
        /* General body style for demonstration */
        body {
            margin: 0;
            font-family: sans-serif;
        }

        .container {
            width: 100%;
            max-width: 1200px; /* Or your desired max width */
            margin: 0 auto;
            box-sizing: border-box; /* Ensures padding doesn't add to width */
        }

        /* --- ここからがヘッダーのスタイルです --- */

        .site-header {
            padding: 10px 0;
            min-height: auto;
            background-color: white; /* 白い背景を追加 */
            border-bottom: 1px solid #f0f0f0; /* Optional: adds a nice separator */
        }

        .header-content {
            display: flex;
            justify-content: space-between; /* 左右に配置 */
            align-items: center;
            flex-wrap: nowrap; 
            padding: 0 15px;
            position: relative; /* 相対位置指定で左右の要素を絶対配置 */
        }

        /* 左側のロゴと商号 */
        .header-logo {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: #000000;
            font-family: 'Inter', 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
            font-weight: 600;
            font-size: 1.5rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            line-height: 1;
        }

        .header-logo img {
            height: 40px;
            margin-right: 8px;
        }

        .header-logo .brand-with {
            font-weight: 400;
            color: #1e40af;
        }
        
        /* 右側のアクションボタンのコンテナ */
        .header-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }


        #login-btn {
            border: none;
            background: none;
            padding: 8px 16px;
            font-size: 1rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            color: #000000;
            text-decoration: none;
        }

        #login-btn:hover {
            color: #1e40af;
        }
        
        .user-greeting {
            margin-right: 10px;
            font-size: 0.9rem;
            color: #666;
        }

        /* --- レスポンシブ対応 --- */
        
        /* 768px以下の画面サイズ */
        @media (max-width: 768px) {
            .header-logo {
                font-size: 1.2rem;
            }
            .header-logo img {
                height: 35px;
            }
            #login-btn {
                padding: 6px 12px;
                font-size: 0.9rem;
            }
        }

        /* 480px以下の画面サイズ */
        @media (max-width: 480px) {
            .header-content {
                padding: 0 10px; /* さらに狭い画面ではパディングを少し減らす */
            }
            .header-logo {
                font-size: 1.1rem;
            }
            .header-logo img {
                height: 30px;
            }
            #login-btn {
                padding: 6px 8px;
                font-size: 0.8rem;
            }
        }

        /* Phase別進捗表示のスタイル */
        .phase-progress-container {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border-radius: 15px;
            padding: 1.5rem;
            margin: 2rem 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border: 1px solid #e2e8f0;
        }

        .phase-progress-title {
            color: #1e40af;
            font-weight: 700;
            font-size: 1.3rem;
            margin-bottom: 1rem;
            text-align: center;
        }

        .phase-progress-title i {
            margin-right: 0.5rem;
        }

        .phase-stepper {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 1.5rem;
        }

        .phase-item {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            position: relative;
            padding: 0.75rem;
            border-radius: 10px;
            transition: all 0.3s ease;
            text-decoration: none;
            color: inherit;
            cursor: pointer;
        }

        .phase-item:hover {
            text-decoration: none;
            color: inherit;
        }

        .phase-item.active {
            background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
            color: white;
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(30, 64, 175, 0.3);
        }

        .phase-item.locked {
            background: #f1f5f9;
            color: #64748b;
            opacity: 0.6;
        }

        .phase-item.completed {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
        }

        .phase-indicator {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .phase-icon {
            position: relative;
            z-index: 2;
            color: inherit;
        }

        .phase-progress-fill {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            background: rgba(255, 255, 255, 0.3);
            transition: height 0.3s ease;
            border-radius: 0 0 50% 50%;
        }

        .phase-item.active .phase-indicator {
            background: rgba(255, 255, 255, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.3);
        }

        .phase-item.locked .phase-indicator {
            background: #e2e8f0;
            border: 2px solid #cbd5e1;
        }

        .phase-item.completed .phase-indicator {
            background: rgba(255, 255, 255, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.3);
        }

        .phase-name {
            font-size: 0.9rem;
            font-weight: 600;
            margin: 0;
        }

        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            .phase-stepper {
                gap: 1rem;
            }

            .phase-item {
                padding: 0.5rem;
            }

            .phase-indicator {
                width: 45px;
                height: 45px;
                font-size: 1.2rem;
            }

            .phase-name {
                font-size: 0.8rem;
            }
        }

        @media (max-width: 480px) {
            .phase-progress-container {
                padding: 1rem;
                margin: 1rem 0;
            }

            .phase-progress-title {
                font-size: 1.1rem;
                margin-bottom: 0.75rem;
            }

            .phase-stepper {
                gap: 0.5rem;
            }

            .phase-item {
                padding: 0.4rem;
            }

            .phase-indicator {
                width: 40px;
                height: 40px;
                font-size: 1.1rem;
            }

            .phase-name {
                font-size: 0.75rem;
            }
        }

        /* Phase2へ戻るボタンのスタイル */
        .phase2-back-button-container {
            text-align: center;
            margin: 3rem 0;
            padding: 2rem 0;
        }

        .phase2-back-button {
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            background: linear-gradient(135deg, #6b7280 0%, #9ca3af 100%);
            color: white;
            text-decoration: none;
            padding: 1rem 2rem;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(107, 114, 128, 0.3);
            border: none;
            cursor: pointer;
        }

        .phase2-back-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(107, 114, 128, 0.4);
            color: white;
            text-decoration: none;
        }

        .phase2-back-button:active {
            transform: translateY(0);
        }

        .phase2-back-button i {
            font-size: 1.2rem;
            transition: transform 0.3s ease;
        }

        .phase2-back-button:hover i {
            transform: translateX(-3px);
        }

        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            .phase2-back-button-container {
                margin: 2rem 0;
                padding: 1.5rem 0;
            }

            .phase2-back-button {
                padding: 0.875rem 1.5rem;
                font-size: 1rem;
            }
        }

        @media (max-width: 480px) {
            .phase2-back-button-container {
                margin: 1.5rem 0;
                padding: 1rem 0;
            }

            .phase2-back-button {
                padding: 0.75rem 1.25rem;
                font-size: 0.95rem;
                gap: 0.5rem;
            }
        }

    </style>

    <header class="site-header">
        <div class="container">
            <!-- 修正後のHTML構造 -->
            <div class="header-content">
                <!-- 左側のロゴと商号 -->
                <a href="/learning" class="header-logo">
                    <img src="/logo.png" alt="Stock with" height="40">
                    STOCK&nbsp;<span class="brand-with">WITH</span>
                </a>
                
                <!-- 右側のアクションボタン -->
                <div class="header-actions">
                    <% if (user) { %>
                        <!-- ログイン済みの場合 -->
                        <button id="login-btn" class="btn btn-outline" onclick="handleUserProfile()">
                            <i class="fas fa-user"></i>
                        </button>
                    <% } else { %>
                        <!-- 未ログインの場合 -->
                        <span id="user-greeting" style="display: none;"></span>
                        <button id="logout-btn" class="btn btn-outline" onclick="window.Clerk.signOut()" style="display: none;">
                            <i class="fas fa-sign-out-alt"></i>
                        </button>
                        <button id="login-btn" class="btn btn-outline" onclick="window.Clerk.openSignIn()">
                            <i class="fas fa-right-to-bracket"></i>
                            ログイン
                        </button>
                    <% } %>
                </div>
            </div>
        </div>
    </header>

    <main class="site-main">
        <div class="container">
            <% if (isGuest) { %>
            <!-- ゲストモード通知 -->
            <div class="guest-notice">
                <i class="fas fa-info-circle"></i>
                <div>
                    <strong>ゲストモードで学習中</strong><br>
                    学習進捗は保存されません。進捗を保存するには<a href="#" onclick="window.Clerk.openSignIn()">ログイン</a>または<a href="#" onclick="window.Clerk.openSignUp()">新規登録</a>してください。
                </div>
            </div>
            <% } %>

            <!-- プロトタイプ注意書き -->
            <div class="prototype-notice">
                <i class="fas fa-exclamation-triangle"></i>
                <div>
                    <strong>現在はまだプロトタイプ（試作段階）です！</strong><br>
                    そのため、ログインしたとしても、進捗機能が保存されない場合や、突然リセットされる場合があります！その他さまざまな不具合が見られる可能性があるのでご理解ください！！
                </div>
            </div>


            <!-- Phase別進捗表示 -->
            <div class="phase-progress-container">
                <h3 class="phase-progress-title">
                    <i class="fas fa-graduation-cap"></i>学習フェーズ進捗
                </h3>
                <div class="phase-stepper">
                    <a href="/learning" class="phase-item locked" data-phase="1">
                        <div class="phase-indicator">
                            <div class="phase-icon">
                                <i class="fa-solid fa-seedling"></i>
                            </div>
                            <div class="phase-progress-fill" style="height: <%= phase1Progress %>%"></div>
                        </div>
                        <div class="phase-name">Phase 1</div>
                    </a>
                    
                    <a href="/phase2" class="phase-item locked" data-phase="2">
                        <div class="phase-indicator">
                            <div class="phase-icon">
                                <i class="fa-solid fa-leaf"></i>
                            </div>
                            <div class="phase-progress-fill" style="height: 0%"></div>
                        </div>
                        <div class="phase-name">Phase 2</div>
                    </a>
                    
                    <a href="/phase3" class="phase-item active" data-phase="3">
                        <div class="phase-indicator">
                            <div class="phase-icon">
                                <i class="fa-solid fa-tree"></i>
                            </div>
                            <div class="phase-progress-fill" style="height: 0%"></div>
                        </div>
                        <div class="phase-name">Phase 3</div>
                    </a>
                </div>
            </div>
            
            <!-- Phase3の学習コンテンツ -->
            <section class="chapter" data-chapter="0">
                <div class="chapter-header">
                    <div class="chapter-title-container">
                        <button class="chapter-toggle" data-chapter="0" aria-expanded="false">
                            <h2>Stage 11: 信用取引で戦略の幅を広げよう【レバレッジと空売り】</h2>
                        </button>
                    </div>
                    <div class="progress-container">
                        <div class="progress-bar" data-width="100"></div>
                        <span class="progress-text">2 / 2 問クリア</span>
                    </div>
                </div>
                <div class="chapter-content" id="chapter-0" data-visible="false">
                    <ul class="lesson-list">
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 11-1: 「レバレッジ」の光と影">Stage 11-1: 「レバレッジ」の光と影</a></li>
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 11-2: 下落相場で利益を出す「空売り」">Stage 11-2: 下落相場で利益を出す「空売り」</a></li>
                    </ul>
                </div>
            </section>

            <section class="chapter" data-chapter="1">
                <div class="chapter-header">
                    <div class="chapter-title-container">
                        <button class="chapter-toggle" data-chapter="1" aria-expanded="false">
                            <h2>Stage 12: FXで世界の為替市場に挑戦しよう【外国為替証拠金取引】</h2>
                        </button>
                    </div>
                    <div class="progress-container">
                        <div class="progress-bar" data-width="0"></div>
                        <span class="progress-text">0 / 2 問クリア</span>
                    </div>
                </div>
                <div class="chapter-content" id="chapter-1" data-visible="false">
                    <ul class="lesson-list">
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 12-1: FX（外国為替証拠金取引）の基本">Stage 12-1: FX（外国為替証拠金取引）の基本</a></li>
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 12-2: FX最大の特徴「レバレッジ」と「スワップポイント」">Stage 12-2: FX最大の特徴「レバレッジ」と「スワップポイント」</a></li>
                    </ul>
                </div>
            </section>

            <section class="chapter" data-chapter="2">
                <div class="chapter-header">
                    <div class="chapter-title-container">
                        <button class="chapter-toggle" data-chapter="2" aria-expanded="false">
                            <h2>Stage 13: 先物・オプション取引の世界【デリバティブ取引】</h2>
                        </button>
                    </div>
                    <div class="progress-container">
                        <div class="progress-bar" data-width="0"></div>
                        <span class="progress-text">0 / 3 問クリア</span>
                    </div>
                </div>
                <div class="chapter-content" id="chapter-2" data-visible="false">
                    <ul class="lesson-list">
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 13-1: 「未来の価格」を取引する先物取引">Stage 13-1: 「未来の価格」を取引する先物取引</a></li>
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 13-2: 「権利」を売買するオプション取引">Stage 13-2: 「権利」を売買するオプション取引</a></li>
                        <li><a href="/under-development" class="lesson-link" data-original-title="Stage 13-3: なぜデリバティブは危険と言われるのか">Stage 13-3: なぜデリバティブは危険と言われるのか</a></li>
                    </ul>
                </div>
            </section>
            
            <!-- Phase2へ戻るボタン -->
            <div class="phase2-back-button-container">
                <a href="/phase2" class="phase2-back-button">
                    <i class="fas fa-arrow-left"></i>
                    Phase2へ戻る
                </a>
            </div>
        </div>
    </main>

    <footer class="site-footer">
        <div class="container">
            <p>&copy; 2025 Stock with株式会社. All Rights Reserved.</p>
        </div>
    </footer>

    <script>
        // Clerkの初期化（簡素化版）
        window.addEventListener('load', async () => {
            try {
                console.log('Clerk初期化を開始します...');
                console.log('Publishable key:', window.Clerk.publishableKey);
                
                // Clerkが利用可能かチェック
                if (window.Clerk && typeof window.Clerk.load === 'function') {
                    await window.Clerk.load();
                    console.log('Clerk loaded successfully');
                } else {
                    console.log('Clerkは既に初期化済みまたは利用できません');
                }
                
                console.log('Clerk object:', window.Clerk);
                console.log('Current user:', window.Clerk.user);
                
                updateAuthUI();
                
                // レッスンタイトルを変換（Stageを削除）
                formatLessonTitles();
                
            } catch (error) {
                console.error('Error loading Clerk:', error);
                // エラーが発生してもページは継続
                console.log('Clerkの初期化に失敗しましたが、ページは継続します');
            }
        });

        // レッスンタイトルを変換する関数
        function formatLessonTitles() {
            const lessonLinks = document.querySelectorAll('.lesson-link');
            lessonLinks.forEach(link => {
                const originalTitle = link.getAttribute('data-original-title');
                if (originalTitle) {
                    // "Stage11-1.「レバレッジ」の光と影" -> "11-1. 「レバレッジ」の光と影"
                    const formattedTitle = originalTitle
                        .replace(/^Stage\s*(\d+-\d+)\./, '$1. ')
                        .replace(/^Stage\s*(\d+)\./, '$1. ');
                    link.textContent = formattedTitle;
                }
            });
        }
        
        // ユーザープロフィール処理関数
        function handleUserProfile() {
            console.log('ユーザープロフィールボタンがクリックされました');
            
            // サーバーサイドでユーザーがログインしているかチェック
            <% if (user) { %>
                console.log('サーバーサイドでユーザーがログイン済みです');
                // Clerkが利用可能かチェック
                if (window.Clerk && typeof window.Clerk.openUserProfile === 'function') {
                    try {
                        window.Clerk.openUserProfile();
                        console.log('プロフィール画面を開きました');
                    } catch (error) {
                        console.error('プロフィール画面を開く際にエラーが発生しました:', error);
                        alert('プロフィール画面を開けませんでした。');
                    }
                } else {
                    console.error('Clerkが利用できません');
                    alert('プロフィール機能が利用できません。');
                }
            <% } else { %>
                console.log('ユーザーがログインしていません');
                alert('ログインが必要です。');
            <% } %>
        }

        // 認証UIの更新関数（サーバーサイドで既に適切な状態が設定されているため、簡素化）
        function updateAuthUI() {
            const user = window.Clerk.user;
            const userGreeting = document.getElementById('user-greeting');
            const loginBtn = document.getElementById('login-btn');
            
            if (user) {
                // ログイン済みの場合
                if (userGreeting) userGreeting.style.display = 'none';
                if (loginBtn) {
                    loginBtn.innerHTML = '<i class="fas fa-user"></i>';
                    loginBtn.onclick = handleUserProfile;
                }
            } else {
                // 未ログインの場合
                if (userGreeting) userGreeting.style.display = 'none';
                if (loginBtn) {
                    loginBtn.innerHTML = '<i class="fas fa-right-to-bracket"></i> ログイン';
                    loginBtn.onclick = () => window.Clerk.openSignIn();
                }
            }
        }
        
        // ドロップダウン機能と検索機能のJavaScript
        document.addEventListener('DOMContentLoaded', function() {
            // プログレスバーの幅を設定
            document.querySelectorAll('.progress-bar').forEach(bar => {
                const width = bar.getAttribute('data-width');
                if (width) {
                    bar.style.width = width + '%';
                }
            });
            
            // チャプターコンテンツの表示状態を設定
            document.querySelectorAll('.chapter-content').forEach(content => {
                const visible = content.getAttribute('data-visible');
                if (visible === 'true') {
                    content.style.display = 'block';
                } else {
                    content.style.display = 'none';
                }
            });
            
            // ドロップダウン機能
            const chapterToggles = document.querySelectorAll('.chapter-toggle');
            
            chapterToggles.forEach(toggle => {
                toggle.addEventListener('click', function() {
                    console.log('Chapter toggle clicked!');
                    const chapterIndex = this.getAttribute('data-chapter');
                    const chapterContent = document.getElementById(`chapter-${chapterIndex}`);
                    const isExpanded = this.getAttribute('aria-expanded') === 'true';
                    
                    console.log('Chapter index:', chapterIndex);
                    console.log('Chapter content element:', chapterContent);
                    console.log('Is expanded:', isExpanded);
                    
                    if (isExpanded) {
                        // 閉じる
                        chapterContent.style.display = 'none';
                        this.setAttribute('aria-expanded', 'false');
                        console.log('Chapter closed');
                    } else {
                        // 開く
                        chapterContent.style.display = 'block';
                        this.setAttribute('aria-expanded', 'true');
                        console.log('Chapter opened');
                    }
                });
            });
        });
    </script>
</body>
</html>